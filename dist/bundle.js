(()=>{"use strict";const t=class{constructor(t=0,s=0,i=10,e=10,h="red"){this.x=t,this.y=s,this.width=i,this.height=e,this.color=h}moveTo(t,s){this.x=t,this.y=s}moveBy(t,s){this.x+=t,this.y+=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill()}},s=class extends t{constructor(t=0,s=0,i=2,e=-2,h=10,l="red"){super(t,s,2*h,2*h,l),this.radius=h,this.dx=i,this.dy=e}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.fillStyle=this.color,t.fill(),t.closePath()}move(){this.moveBy(this.dx,this.dy)}},i=class extends t{constructor(t,s,i,e="16px Helvetica",h="red",l="left"){super(t,s,0,0,h),this.text=i,this.font=e,this.align=l,this.value=0}render(t){t.font=this.font,t.textAlign=this.align,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}},e=class extends t{constructor(t,s,i,e,h){super(t,s,i,e,h),this.status=1}};new class{constructor(h){this.canvas=document.getElementById(h),this.ctx=this.canvas.getContext("2d"),this.ballRadius=10,this.paddleHeight=10,this.paddleWidth=75,this.brickRowCount=4,this.brickColumnCount=5,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.paddleXStart=(this.canvas.width-this.paddleWidth)/2,this.paddleYStart=this.canvas.height-this.paddleHeight,this.objectColor="#0095DD",this.gameOverMessage="Game Over!",this.ARROW_RIGHT="ArrowRight",this.ARROW_LEFT="ArrowLeft",this.RIGHT="Right",this.LEFT="Left",this.FONT="16px Arial",this.ball=new s(0,0,2,-2,this.ballRadius,this.objectColor),this.paddle=new t(this.paddleXStart,this.paddleYStart,this.paddleWidth,this.paddleHeight,this.objectColor),this.bricks=new class{constructor(t=3,s=5){this.rows=t,this.cols=s,this.bricks=[],this.setup()}setup(){for(let t=0;t<this.cols;t+=1){this.bricks[t]=[];for(let s=0;s<this.rows;s+=1){const i=new e;i.x=t*(i.width+10)+30,i.y=s*(i.height+10)+30,this.bricks[t][s]=i}}}render(t){for(let s=0;s<this.cols;s+=1)for(let i=0;i<this.rows;i+=1)1===this.bricks[s][i].status&&this.bricks[s][i].render(t)}}({cols:this.brickColumnCount,rows:this.brickRowCount,width:this.brickWidth,height:this.brickHeight,padding:this.brickPadding,offsetLeft:this.brickOffsetLeft,offsetTop:this.brickOffsetTop,color:this.objectColor}),this.scoreLabel=new i("Score: ",8,20),this.livesLabel=new i("Lives: ",this.canvas.width-65,20),this.rightPressed=!1,this.leftPressed=!1,this.setup(),this.draw()}resetBallAndPaddle(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.dx=2,this.ball.dy=-2,this.paddle.x=(this.canvas.width-this.paddleWidth)/2}setup(){this.livesLabel.value=3,this.resetBallAndPaddle(),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1),document.addEventListener("mousemove",this.mouseMoveHandler.bind(this),!1)}collisionDetection(){for(let t=0;t<this.bricks.cols;t+=1)for(let s=0;s<this.bricks.rows;s+=1){const i=this.bricks.bricks[t][s];1===i.status&&this.ball.x>i.x&&this.ball.x<i.x+this.brickWidth&&this.ball.y>i.y&&this.ball.y<i.y+this.brickHeight&&(this.ball.dy=-this.ball.dy,i.status=0,0===s?this.scoreLabel.value+=40:1===s?this.scoreLabel.value+=30:2===s?this.scoreLabel.value+=20:3===s&&(this.scoreLabel.value+=10),500===this.scoreLabel.value&&(alert("YOU WIN, CONGRATULATIONS!"),document.location.reload()))}}movePaddle(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveBy(7,0):this.leftPressed&&this.paddle.x>0&&this.paddle.moveBy(-7,0)}collisionsWithCanvasAndPaddle(){(this.ball.x+this.ball.dx>this.canvas.width-this.ballRadius||this.ball.x+this.ball.dx<this.ballRadius)&&(this.ball.dx=-this.ball.dx),this.ball.y+this.ball.dy<this.ball.ballRadius?this.ball.dy=-this.ball.dy:this.ball.y+this.ball.dy>this.canvas.height-this.ball.ballRadius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddleWidth?this.ball.dy=-this.ball.dy:(this.livesLabel.value-=1,this.livesLabel.value<1?(alert("GAME OVER"),document.location.reload()):this.resetBallAndPaddle()))}keyDownHandler(t){t.key===this.RIGHT||t.key===this.ARROW_RIGHT?this.rightPressed=!0:t.key!==this.LEFT&&t.key!==this.ARROW_LEFT||(this.leftPressed=!0)}keyUpHandler(t){t.key===this.RIGHT||t.key===this.ARROW_RIGHT?this.rightPressed=!1:t.key!==this.LEFT&&t.key!==this.ARROW_LEFT||(this.leftPressed=!1)}mouseMoveHandler(t){const s=t.clientX-this.canvas.offsetLeft;s>0&&s<this.canvas.width&&this.paddle.moveTo(s-this.paddleWidth/2,this.paddleYStart)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bricks.render(this.ctx),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.scoreLabel.render(this.ctx),this.livesLabel.render(this.ctx),this.collisionDetection(),this.ball.move(),this.collisionsWithCanvasAndPaddle(),this.movePaddle(),requestAnimationFrame(this.draw)}}("myCanvas").draw()})();